{"ast":null,"code":"import _objectSpread from\"/workspaces/Dex/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _asyncToGenerator from\"/workspaces/Dex/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"/workspaces/Dex/node_modules/@babel/runtime/regenerator/index.js\";import axios from'axios';import{API,API_URL,API_KEY}from'./constants';export var getTransactions=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(pairAddress,chain,tokenAddress){var url,result;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;url=\"\".concat(API,\"/getTransactions?tokenAddress=\").concat(tokenAddress,\"&chain=\").concat(chain,\"&pairAddress=\").concat(pairAddress);_context.next=4;return axios.get(url);case 4:result=_context.sent;if(!(result.data.length===0)){_context.next=7;break;}throw new Error('No transactions found');case 7:return _context.abrupt(\"return\",result.data);case 10:_context.prev=10;_context.t0=_context[\"catch\"](0);return _context.abrupt(\"return\",[]);case 13:case\"end\":return _context.stop();}}},_callee,null,[[0,10]]);}));return function getTransactions(_x,_x2,_x3){return _ref.apply(this,arguments);};}();export var fetchWhaleTrades=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var _response$data,_response$data$data,_response$data$data$e,query,response;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;query={query:\"\\n      {\\n        ethereum(network: ethereum) {\\n          dexTrades(\\n            options: {limit: 100, desc: \\\"timeInterval.minute\\\"}\\n            tradeAmountUsd: {gt: 30000, lt: 50000}\\n            quoteCurrency: {in: [\\\"WETH\\\", \\\"USDC\\\"]}\\n            baseCurrency: {notIn: [\\\"ETH\\\", \\\"WETH\\\", \\\"USDC\\\", \\\"DAI\\\", \\\"USDT\\\", \\\"WBTC\\\"]}\\n          ) {\\n            timeInterval {\\n              minute\\n            }\\n            transaction {\\n              hash\\n              txFrom {\\n                address\\n              }\\n            }\\n            baseAmount\\n            baseCurrency {\\n              address\\n              name\\n              symbol\\n            }\\n            quoteAmount\\n            quoteCurrency {\\n              name\\n              symbol\\n            }\\n            tradeAmount(in: USD)\\n            exchange {\\n              fullName\\n            }\\n            tradeType: buyAmount\\n            buyCurrency {\\n              tokenId\\n            }\\n          }\\n        }\\n      }\\n      \"};_context2.next=4;return axios.post(API_URL,query,{headers:{'Content-Type':'application/json','X-API-KEY':API_KEY}});case 4:response=_context2.sent;return _context2.abrupt(\"return\",((_response$data=response.data)===null||_response$data===void 0?void 0:(_response$data$data=_response$data.data)===null||_response$data$data===void 0?void 0:(_response$data$data$e=_response$data$data.ethereum)===null||_response$data$data$e===void 0?void 0:_response$data$data$e.dexTrades.map(function(trade){return _objectSpread(_objectSpread({},trade),{},{tradeType:trade.baseAmount>trade.quoteAmount?'Buy':'Sell'});}))||[]);case 8:_context2.prev=8;_context2.t0=_context2[\"catch\"](0);console.error('Error fetching whale trades:',_context2.t0);return _context2.abrupt(\"return\",[]);case 12:case\"end\":return _context2.stop();}}},_callee2,null,[[0,8]]);}));return function fetchWhaleTrades(){return _ref2.apply(this,arguments);};}();// Fetch wallet analytics data\nexport var fetchWalletAnalytics=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(address,network){var _response$data2,_response$data2$data,_response$data2$data$,query,response;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;query={query:\"\\n      {\\n        ethereum(network: \".concat(network,\") {\\n          dexTrades(\\n            date: { since: \\\"2022-05-05\\\" }\\n            any: [{ taker: { is: \\\"\").concat(address,\"\\\" } }, { txSender: { is: \\\"\").concat(address,\"\\\" } }]\\n            options: { desc: \\\"block.height\\\", limit: 100 }\\n          ) {\\n            transaction {\\n              hash\\n            }\\n            smartContract {\\n              address {\\n                address\\n              }\\n              contractType\\n              currency {\\n                name\\n              }\\n            }\\n            date {\\n              date\\n            }\\n            block {\\n              height\\n            }\\n            buyAmount\\n            buyAmountInUsd: buyAmount(in: USD)\\n            buyCurrency {\\n              symbol\\n              address\\n            }\\n            sellAmount\\n            sellAmountInUsd: sellAmount(in: USD)\\n            sellCurrency {\\n              symbol\\n              address\\n            }\\n            tradeAmount(in: USD)\\n          }\\n        }\\n      }\\n      \")};_context3.next=4;return axios.post(API_URL,query,{headers:{'Content-Type':'application/json','X-API-KEY':API_KEY}});case 4:response=_context3.sent;return _context3.abrupt(\"return\",((_response$data2=response.data)===null||_response$data2===void 0?void 0:(_response$data2$data=_response$data2.data)===null||_response$data2$data===void 0?void 0:(_response$data2$data$=_response$data2$data.ethereum)===null||_response$data2$data$===void 0?void 0:_response$data2$data$.dexTrades)||[]);case 8:_context3.prev=8;_context3.t0=_context3[\"catch\"](0);console.error('Error fetching wallet analytics:',_context3.t0);return _context3.abrupt(\"return\",[]);case 12:case\"end\":return _context3.stop();}}},_callee3,null,[[0,8]]);}));return function fetchWalletAnalytics(_x4,_x5){return _ref3.apply(this,arguments);};}();","map":null,"metadata":{},"sourceType":"module"}